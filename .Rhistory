country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)
}
ggplot(dat, aes(x = ))+
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)
}
ggplot(dat, aes(x = ))+
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)
}
ggplot(dat, aes(x = ))+
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)
}
ggplot(dat, aes(x = ))+
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp))
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) #%>%
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) #%>%
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) #%>%
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant Protein', 'Animal Protein'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp))
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant', 'Animal'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point()
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant', 'Animal'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)) %>%
mutate(prop_animal = total_co2_gp_Animal / total_co2_gp_Animal + total_co2_gp_Plant)
get_dat <- function(){
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant', 'Animal'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)) %>%
mutate(prop_animal = total_co2_gp_Animal / total_co2_gp_Animal + total_co2_gp_Plant)
}
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant', 'Animal'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)) %>%
mutate(prop_animal = total_co2_gp_Animal / (total_co2_gp_Animal + total_co2_gp_Plant))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_label_repel()
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_label()
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_label(label = NAME_LONG)
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_label(label = 'NAME_LONG')
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_label(aes(label = 'NAME_LONG'))
geom_label(aes(label = NAME_LONG)
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_label(aes(label = NAME_LONG))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))
library(ggrepel)
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(size = prop_animal, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(fill = prop_animal, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(colour = prop_animal, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(colour = prop_animal, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))+
scale_fill_viridis_b()
dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv') %>%
group_by(country) %>%
mutate(total = sum(co2_emmission),
proportion = co2_emmission/total) %>%
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant', 'Animal'))) %>%
mutate(country = replace(country, country == 'Congo', 'Democratic Republic of the Congo'),
country = replace(country, country == 'Gambia', 'The Gambia'),
country = replace(country, country == 'Macedonia', 'North Macedonia'),
country = replace(country, country == 'Russia', 'Russian Federation'),
country = replace(country, country == 'South Korea', 'Republic of Korea'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Swaziland', 'Kingdom of eSwatini'),
country = replace(country, country == 'Taiwan. ROC', 'Taiwan'),
country = replace(country, country == 'USA', 'United States'),) %>%
rename("NAME_LONG" = "country") %>%
group_by(NAME_LONG, food_group) %>%
summarise(total_co2_gp = sum(co2_emmission),
total_con_gp = sum(consumption),) %>%
# mutate(total_co2_prop_animal = total_co2_gp / (total_co2_gp +lag(total_co2_gp)),
#        total_co2_prop_plant =  1 - lead(total_co2_prop_animal)) %>%
pivot_wider(names_from = food_group, values_from = c(total_co2_gp, total_con_gp)) %>%
mutate(prop_plant = 1-(total_co2_gp_Animal / (total_co2_gp_Animal + total_co2_gp_Plant)))
library(ggrepel)
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(colour = prop_animal, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))+
scale_fill_viridis_b()
ggplot(dat, aes(x = total_con_gp_Plant, y = total_con_gp_Animal ))+
geom_point(aes(colour = prop_plant, alpha = 0.5))+
geom_text_repel(aes(label = NAME_LONG))+
scale_fill_viridis_b()
shiny::runApp('food_consumption')
dat <-readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv')
runApp('food_consumption')
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
## Packages ####
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("tmap")) install.packages("tmap")
if(!require("rnaturalearth")) install.packages("rnaturalearth")
if(!require("sf")) install.packages("sf")
if(!require("ggtext")) install.packages("ggtext")
if(!require("scales")) install.packages("scales")
if(!require("ggdist")) install.packages("ggdist")
if(!require("ggrepel")) install.packages("ggrepel")
## Import Data ####
dat <-readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-18/food_consumption.csv')
co2_dat <- dat %>%
group_by(country) %>%
# Create factor levels dividing food groups into plant or animal origin
mutate(food_category = as.factor(food_category),
food_group = c(1,1,1,1,1,1,1,0,0,0,0),
food_group = factor(food_group, labels = c('Plant', 'Animal'))) %>%
ungroup() %>%
group_by(food_group) %>%
# Create variables to calculate co2 emissions and consumption by food group
mutate(sum_co2 = sum(co2_emmission),
sum_kg = sum(consumption),
co2_per_kg = (sum_co2/sum_kg)) %>%
# summarise df to include only results for each food group
summarise(co2_per_kg = min(co2_per_kg),
sum_co2 = min(sum_co2),
sum_kg = min(sum_kg)) %>%
# calculate amount of co2 if kg of animal protein eaten had average emissions of plant consumed
mutate(animal_as_plant =(sum_kg * lag(co2_per_kg)))
# set x and y coordinates for graph
x <- c(1,1,2)
y<- c(1,3,2)
# extract relevant information for graph from above calculations
#co2 emissions from current consumption levels and c02 total if everything plant based
z<- as.list(c(co2_dat[[3]],co2_dat[2,5]))
# merge location and size data into 1 dataframe
df <- data.frame(x,y) %>%
mutate(value = round(as.numeric(z)))
# Create plot object
ggplot(df, aes(x =x, y = y))+
geom_point(aes(size = value), colour = c('#D55E00', '#0072B2', '#D55E00'))+ # set colours using palatte
scale_size_area(max_size = 120) + # increase size of points
theme_void(base_size = 20)+ # remove all graoh junk and increase text size
theme(legend.position = "none")+ # remove legend
xlim(0,2.5)+ # set plot limits to centre dots
ylim(0,5)+
geom_text(aes(label = paste0( scales::comma(value)," KG\n of CO2")), # add formatted labels to dots
colour = 'white')+
# add labels and arrows of current situation
geom_text(aes(x = 0.2, y = 0.8),
label = 'The current situation',
colour = '#E69F00',
size = 6)+
geom_curve(aes(x = 0.2, y = 0.9, xend = 0.85, yend = 1.1),
colour = "#E69F00",
size=1,
curvature = -0.2,
arrow = arrow(length = unit(0.03, "npc")))+
geom_curve(aes(x = 0.2, y = 0.9, xend = 0.5, yend = 3),
colour = "#E69F00",
size=1,
curvature = -0.6,
arrow = arrow(length = unit(0.03, "npc")))+
# Add labels and arrows of future situation
geom_text(aes(x = 2, y = 4),
label = 'If everyone ate\n only plant protein',
colour = '#009E73',
size = 6)+
geom_curve(aes(x = 2, y = 3.7, xend = 2, yend = 2.7),
colour = "#009E73",
size=1,
curvature = -0.2,
arrow = arrow(length = unit(0.03, "npc")))+
#add titles colour coded to show consumption type
labs(title = "C02 Emissions of the world: Current and Potential <br>
<span style='color:#D55E00'> Plant </span>and <span style='color:#0072B2'>Animal  </span>CO2 emissions",
x = NULL,
y = ' Consumption per capita (Kg)') +
theme(plot.title = element_markdown(hjust = 0.5),
)
amounts <- dat %>%
# Create ordered factors for food category by median consumption
mutate(food_category = fct_reorder(food_category, consumption, .fun='median'))
ggplot(amounts, aes(x = food_category, y = consumption))+
# Add the raincloud part of plot
ggdist::stat_halfeye( fill = '#CC79A7',
adjust = 0.5,
width = .6,
.width = 0,
justification = -.2,
point_colour = NA,
normalize = 'groups',
)+# add boxplot to show distribution
geom_boxplot( width = 0.15,
outlier.colour = NA,
alpha = 0.5)+
# add 'rain'
stat_dots(alpha = 1,
fill = 'black',
dotsize = 1,
side = 'left')+
# flip so that rain falls down
coord_flip()+
theme_minimal(base_size = 15)+
labs(title = 'Consumption of food categories by country',
subtitle = "<span style='color:#D55E00'>Maximum amount (KG)</span>",
x = NULL,
y = ' Consumption per capita (KG)') +
theme(legend.position = 'none', # remove legend
plot.title = element_text(),
plot.subtitle = element_markdown(hjust =.4), # set as markdown to allow colour change
axis.text.y = element_text(vjust = -1),
panel.grid.major.y = element_blank(), # remove grid lines
panel.grid.minor.x = element_blank())+
scale_y_continuous(breaks = seq(0, 450, by = 50))+ # set y axis breaks
# add label and arrow for Highest value: Finland
geom_curve(aes(x = 7.5, y = 355, xend = 9.8, yend = 421),
colour = "red",
size=1,
curvature = 0.4,
arrow = arrow(length = unit(0.03, "npc")))+
geom_label(aes(x = 8, y = 400,
label = 'Finland consumes\n
the most dairy\n
products per capita'),
hjust = 1,
vjust = 1,
lineheight = 0.8,
label.size = NA,
colour = '#0072B2') +
# label all the highest figures by category
geom_label_repel(data = amounts %>%
group_by(food_category) %>%
summarise(max = max(consumption)),
aes(x = food_category, y = max,
label = max),
colour = '#D55E00', label.size = NA,
min.segment.length = 0)
knitr::include_graphics(here::here("images/Bad graph.jpg"))
shiny::runApp('upload')
shiny::runApp('upload')
